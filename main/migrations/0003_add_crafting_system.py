# Generated by Django 5.2.5 on 2025-08-17 19:14

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('main', '0002_itemtemplate_heal_amount_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='CraftingRecipe',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(max_length=500)),
                ('category', models.CharField(choices=[('tools', 'Tools'), ('weapons', 'Weapons'), ('armor', 'Armor'), ('consumables', 'Consumables'), ('materials', 'Materials')], max_length=20)),
                ('result_quantity', models.IntegerField(default=1)),
                ('required_level', models.IntegerField(default=1, help_text='Character level required')),
                ('required_skill_level', models.IntegerField(default=1, help_text='Crafting skill level required')),
                ('base_success_rate', models.FloatField(default=0.8, help_text='Base success rate (0.0-1.0)')),
                ('craft_time_seconds', models.IntegerField(default=10, help_text='Time to complete crafting')),
                ('experience_reward', models.IntegerField(default=25, help_text='Crafting XP gained')),
                ('is_discoverable', models.BooleanField(default=True, help_text='Can players discover this recipe')),
                ('is_active', models.BooleanField(default=True)),
                ('result_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='crafting_recipes', to='main.itemtemplate')),
            ],
            options={
                'db_table': 'rpg_crafting_recipes',
            },
        ),
        migrations.CreateModel(
            name='CraftingAttempt',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('in_progress', 'Crafting'), ('success', 'Success'), ('failure', 'Failed'), ('cancelled', 'Cancelled')], default='in_progress', max_length=20)),
                ('success_rate_used', models.FloatField(help_text='Success rate at time of crafting')),
                ('items_created', models.JSONField(default=list, help_text='Items successfully created')),
                ('experience_gained', models.IntegerField(default=0)),
                ('materials_consumed', models.JSONField(default=list, help_text='Materials used in attempt')),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='crafting_attempts', to='main.character')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attempts', to='main.craftingrecipe')),
            ],
            options={
                'db_table': 'rpg_crafting_attempts',
            },
        ),
        migrations.CreateModel(
            name='CraftingRecipeMaterial',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('material_name', models.CharField(help_text='Name of required item', max_length=100)),
                ('quantity_required', models.IntegerField(default=1)),
                ('is_consumed', models.BooleanField(default=True, help_text='Is this material consumed during crafting')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='required_materials', to='main.craftingrecipe')),
            ],
            options={
                'db_table': 'rpg_crafting_materials',
                'unique_together': {('recipe', 'material_name')},
            },
        ),
    ]
