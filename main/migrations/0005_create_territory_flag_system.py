# Generated by Django 5.2.5 on 2025-08-17 21:12

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('main', '0004_buildingtype_flagcolor_buildingtemplate_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='TerritoryFlag',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('lat', models.FloatField(help_text='Flag latitude')),
                ('lon', models.FloatField(help_text='Flag longitude')),
                ('level', models.IntegerField(default=1, help_text='Flag level (1-5)')),
                ('radius_meters', models.IntegerField(default=200, help_text='Territory control radius in meters')),
                ('status', models.CharField(choices=[('constructing', 'Under Construction'), ('active', 'Active'), ('upgrading', 'Upgrading'), ('damaged', 'Damaged'), ('capturable', 'Capturable'), ('decayed', 'Decayed'), ('destroyed', 'Destroyed')], default='constructing', max_length=20)),
                ('current_hp', models.IntegerField(default=100)),
                ('max_hp', models.IntegerField(default=100)),
                ('custom_name', models.CharField(blank=True, help_text='Custom name for flag', max_length=100)),
                ('base_revenue_per_hour', models.IntegerField(default=10, help_text='Base gold per hour')),
                ('location_bonus_multiplier', models.FloatField(default=1.0, help_text='Location-based revenue multiplier')),
                ('uncollected_revenue', models.IntegerField(default=0)),
                ('total_revenue_generated', models.BigIntegerField(default=0)),
                ('last_revenue_collection', models.DateTimeField(auto_now_add=True)),
                ('daily_upkeep_cost', models.IntegerField(default=50, help_text='Gold required per day')),
                ('upkeep_due_at', models.DateTimeField(blank=True, null=True)),
                ('upkeep_grace_period_hours', models.IntegerField(default=72, help_text='Hours before decay starts')),
                ('last_upkeep_payment', models.DateTimeField(auto_now_add=True)),
                ('construction_started', models.DateTimeField(auto_now_add=True)),
                ('construction_completed', models.DateTimeField(blank=True, null=True)),
                ('construction_time_minutes', models.IntegerField(default=30)),
                ('upgrade_started', models.DateTimeField(blank=True, null=True)),
                ('upgrade_completed', models.DateTimeField(blank=True, null=True)),
                ('last_attacked', models.DateTimeField(blank=True, null=True)),
                ('capture_window_started', models.DateTimeField(blank=True, null=True)),
                ('capture_window_minutes', models.IntegerField(default=30)),
                ('flag_color', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.flagcolor')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='territory_flags', to='main.character')),
            ],
            options={
                'db_table': 'pk_territory_flags',
                'unique_together': {('lat', 'lon')},
            },
        ),
        migrations.CreateModel(
            name='FlagUpkeepLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('event_type', models.CharField(choices=[('payment', 'Upkeep Paid'), ('missed', 'Upkeep Missed'), ('decay_start', 'Decay Started'), ('decay_progress', 'Decay Progressed'), ('abandoned', 'Flag Abandoned')], max_length=20)),
                ('amount_paid', models.IntegerField(default=0)),
                ('days_overdue', models.IntegerField(default=0)),
                ('hp_lost', models.IntegerField(default=0)),
                ('flag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='upkeep_logs', to='main.territoryflag')),
            ],
            options={
                'db_table': 'pk_flag_upkeep_logs',
            },
        ),
        migrations.CreateModel(
            name='FlagRevenueCollection',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('amount_collected', models.IntegerField()),
                ('player_level', models.IntegerField()),
                ('flag_level', models.IntegerField()),
                ('hours_since_last_collection', models.FloatField(default=0.0)),
                ('flag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='revenue_collections', to='main.territoryflag')),
            ],
            options={
                'db_table': 'pk_flag_revenue_collections',
            },
        ),
        migrations.CreateModel(
            name='FlagCombatLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('action', models.CharField(choices=[('attack', 'Attack'), ('capture', 'Capture'), ('repair', 'Repair'), ('destroy', 'Destroy')], max_length=20)),
                ('damage_dealt', models.IntegerField(default=0)),
                ('flag_hp_before', models.IntegerField(default=0)),
                ('flag_hp_after', models.IntegerField(default=0)),
                ('loot_gained', models.IntegerField(default=0)),
                ('attacker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flag_attacks', to='main.character')),
                ('defender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='flag_defenses', to='main.character')),
                ('flag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='combat_logs', to='main.territoryflag')),
            ],
            options={
                'db_table': 'pk_flag_combat_logs',
            },
        ),
        migrations.CreateModel(
            name='TerritoryZone',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('center_lat', models.FloatField()),
                ('center_lon', models.FloatField()),
                ('radius_meters', models.IntegerField()),
                ('north_lat', models.FloatField()),
                ('south_lat', models.FloatField()),
                ('east_lon', models.FloatField()),
                ('west_lon', models.FloatField()),
                ('flag', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='territory_zone', to='main.territoryflag')),
            ],
            options={
                'db_table': 'pk_territory_zones',
            },
        ),
    ]
