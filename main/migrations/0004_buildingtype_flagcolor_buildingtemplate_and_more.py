# Generated by Django 5.2.5 on 2025-08-17 21:03

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('main', '0003_add_crafting_system'),
    ]

    operations = [
        migrations.CreateModel(
            name='BuildingType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(max_length=500)),
                ('category', models.CharField(choices=[('economic', 'Economic'), ('military', 'Military'), ('utility', 'Utility'), ('decorative', 'Decorative')], max_length=20)),
                ('base_cost_gold', models.IntegerField(default=1000)),
                ('base_cost_wood', models.IntegerField(default=50)),
                ('base_cost_stone', models.IntegerField(default=25)),
                ('base_revenue_per_hour', models.IntegerField(default=10, help_text='Gold generated per hour at level 1')),
                ('max_revenue_per_hour', models.IntegerField(default=2500, help_text='Max gold per hour at highest level')),
                ('max_level', models.IntegerField(default=10, help_text='Maximum upgrade level')),
                ('construction_time_minutes', models.IntegerField(default=60, help_text='Time to build in minutes')),
                ('icon_name', models.CharField(default='building', help_text='Icon for map display', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'pk_building_types',
            },
        ),
        migrations.CreateModel(
            name='FlagColor',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('hex_color', models.CharField(help_text='Hex color code (e.g., #FF0000)', max_length=7)),
                ('display_name', models.CharField(help_text='Display name for UI', max_length=50)),
                ('is_premium', models.BooleanField(default=False, help_text='Premium color requiring special unlock')),
                ('unlock_level', models.IntegerField(default=1, help_text='Character level required to unlock')),
                ('unlock_cost', models.IntegerField(default=0, help_text='Gold cost to unlock')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'pk_flag_colors',
            },
        ),
        migrations.CreateModel(
            name='BuildingTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(max_length=300)),
                ('is_starter', models.BooleanField(default=False, help_text='Available to new players')),
                ('level_required', models.IntegerField(default=1)),
                ('cost_gold', models.IntegerField(blank=True, null=True)),
                ('cost_wood', models.IntegerField(blank=True, null=True)),
                ('cost_stone', models.IntegerField(blank=True, null=True)),
                ('building_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.buildingtype')),
            ],
            options={
                'db_table': 'pk_building_templates',
            },
        ),
        migrations.CreateModel(
            name='PlayerBuilding',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('lat', models.FloatField(help_text='Building latitude')),
                ('lon', models.FloatField(help_text='Building longitude')),
                ('level', models.IntegerField(default=1)),
                ('status', models.CharField(choices=[('constructing', 'Under Construction'), ('active', 'Active'), ('damaged', 'Damaged'), ('destroyed', 'Destroyed'), ('upgrading', 'Upgrading')], default='constructing', max_length=20)),
                ('custom_name', models.CharField(blank=True, help_text='Custom name for building', max_length=100)),
                ('last_collection', models.DateTimeField(auto_now_add=True)),
                ('total_revenue_generated', models.BigIntegerField(default=0)),
                ('uncollected_revenue', models.IntegerField(default=0)),
                ('construction_started', models.DateTimeField(auto_now_add=True)),
                ('construction_completed', models.DateTimeField(blank=True, null=True)),
                ('upgrade_started', models.DateTimeField(blank=True, null=True)),
                ('upgrade_completed', models.DateTimeField(blank=True, null=True)),
                ('current_hp', models.IntegerField(default=100)),
                ('max_hp', models.IntegerField(default=100)),
                ('last_attacked', models.DateTimeField(blank=True, null=True)),
                ('building_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.buildingtype')),
                ('flag_color', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.flagcolor')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buildings', to='main.character')),
            ],
            options={
                'db_table': 'pk_player_buildings',
                'unique_together': {('lat', 'lon')},
            },
        ),
        migrations.CreateModel(
            name='BuildingAttack',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('success', 'Successful'), ('failed', 'Failed'), ('abandoned', 'Abandoned')], default='active', max_length=20)),
                ('damage_dealt', models.IntegerField(default=0)),
                ('gold_stolen', models.IntegerField(default=0)),
                ('attack_power', models.IntegerField(help_text="Attacker's power at time of attack")),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('attacker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='building_attacks', to='main.character')),
                ('target_building', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attacks', to='main.playerbuilding')),
            ],
            options={
                'db_table': 'pk_building_attacks',
            },
        ),
        migrations.CreateModel(
            name='RevenueCollection',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('amount_collected', models.IntegerField()),
                ('player_level', models.IntegerField()),
                ('building_level', models.IntegerField()),
                ('hours_since_last_collection', models.FloatField(default=0.0)),
                ('building', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collections', to='main.playerbuilding')),
            ],
            options={
                'db_table': 'pk_revenue_collections',
            },
        ),
    ]
