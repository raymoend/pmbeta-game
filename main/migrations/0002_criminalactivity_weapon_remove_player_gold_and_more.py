# Generated by Django 5.2.5 on 2025-08-16 15:20

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('main', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CriminalActivity',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('activity_type', models.CharField(choices=[('heist', 'Heist'), ('protection', 'Protection Racket'), ('drugs', 'Drug Trade'), ('robbery', 'Robbery'), ('smuggling', 'Smuggling'), ('assassination', 'Assassination'), ('extortion', 'Extortion'), ('money_laundering', 'Money Laundering')], max_length=20)),
                ('difficulty', models.CharField(choices=[('easy', 'Easy'), ('medium', 'Medium'), ('hard', 'Hard'), ('extreme', 'Extreme')], max_length=10)),
                ('description', models.TextField(max_length=500)),
                ('min_level', models.IntegerField(default=1)),
                ('min_reputation', models.IntegerField(default=0)),
                ('required_cash', models.IntegerField(default=0, help_text='Upfront cost')),
                ('lat', models.FloatField(help_text='Activity location latitude')),
                ('lon', models.FloatField(help_text='Activity location longitude')),
                ('min_payout', models.IntegerField(default=100)),
                ('max_payout', models.IntegerField(default=1000)),
                ('heat_gain', models.FloatField(default=1.0, help_text='Heat gained on completion')),
                ('success_chance', models.FloatField(default=0.8, help_text='Base success chance (0-1)')),
                ('duration_minutes', models.IntegerField(default=60, help_text='Time to complete')),
                ('cooldown_hours', models.IntegerField(default=24, help_text='Cooldown before repeating')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Weapon',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('weapon_type', models.CharField(choices=[('melee', 'Melee'), ('pistol', 'Pistol'), ('rifle', 'Rifle'), ('shotgun', 'Shotgun'), ('explosive', 'Explosive'), ('armor', 'Body Armor'), ('vehicle', 'Vehicle')], max_length=20)),
                ('description', models.TextField(max_length=300)),
                ('damage', models.IntegerField(default=10)),
                ('accuracy', models.IntegerField(default=10)),
                ('defense', models.IntegerField(default=0)),
                ('min_level', models.IntegerField(default=1)),
                ('cost', models.IntegerField(default=1000)),
                ('is_available', models.BooleanField(default=True)),
                ('heat_to_purchase', models.FloatField(default=0.5, help_text='Heat gained when purchasing')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RemoveField(
            model_name='player',
            name='gold',
        ),
        migrations.AddField(
            model_name='player',
            name='accuracy',
            field=models.IntegerField(default=10),
        ),
        migrations.AddField(
            model_name='player',
            name='bank_money',
            field=models.BigIntegerField(default=0, help_text='Money in bank'),
        ),
        migrations.AddField(
            model_name='player',
            name='cash',
            field=models.BigIntegerField(default=10000, help_text='Liquid cash on hand'),
        ),
        migrations.AddField(
            model_name='player',
            name='defense',
            field=models.IntegerField(default=10),
        ),
        migrations.AddField(
            model_name='player',
            name='heat_level',
            field=models.FloatField(default=0.0, help_text='Law enforcement attention (0-100)'),
        ),
        migrations.AddField(
            model_name='player',
            name='hospital_release_time',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='player',
            name='influence',
            field=models.IntegerField(default=1, help_text='Political/economic influence'),
        ),
        migrations.AddField(
            model_name='player',
            name='is_hospitalized',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='player',
            name='is_jailed',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='player',
            name='jail_release_time',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='player',
            name='last_activity',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='player',
            name='reputation',
            field=models.IntegerField(default=0, help_text='Street reputation'),
        ),
        migrations.AddField(
            model_name='player',
            name='respect',
            field=models.IntegerField(default=0, help_text='Respect within organization'),
        ),
        migrations.AddField(
            model_name='player',
            name='speed',
            field=models.IntegerField(default=10),
        ),
        migrations.AddField(
            model_name='player',
            name='strength',
            field=models.IntegerField(default=10),
        ),
        migrations.CreateModel(
            name='Business',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('business_type', models.CharField(choices=[('restaurant', 'Restaurant'), ('club', 'Nightclub'), ('casino', 'Casino'), ('warehouse', 'Warehouse'), ('laundromat', 'Laundromat'), ('construction', 'Construction Company'), ('trucking', 'Trucking Company'), ('pawn_shop', 'Pawn Shop')], max_length=20)),
                ('lat', models.FloatField(help_text='Business location latitude')),
                ('lon', models.FloatField(help_text='Business location longitude')),
                ('level', models.IntegerField(default=1)),
                ('legitimate_income', models.IntegerField(default=100, help_text='Hourly legitimate income')),
                ('illegal_income', models.IntegerField(default=0, help_text='Hourly illegal income')),
                ('upkeep_cost', models.IntegerField(default=50, help_text='Hourly operating costs')),
                ('is_operational', models.BooleanField(default=True)),
                ('heat_generated', models.FloatField(default=0.1, help_text='Heat generated per hour')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_businesses', to='main.player')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Combat',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('combat_type', models.CharField(choices=[('assault', 'Assault'), ('assassination', 'Assassination Attempt'), ('territory_war', 'Territory War'), ('family_war', 'Family War'), ('revenge', 'Revenge Attack')], max_length=20)),
                ('status', models.CharField(choices=[('initiated', 'Initiated'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('interrupted', 'Interrupted')], default='initiated', max_length=20)),
                ('lat', models.FloatField(help_text='Combat location latitude')),
                ('lon', models.FloatField(help_text='Combat location longitude')),
                ('attacker_damage', models.IntegerField(default=0)),
                ('defender_damage', models.IntegerField(default=0)),
                ('money_taken', models.IntegerField(default=0)),
                ('respect_gained', models.IntegerField(default=0)),
                ('heat_generated', models.FloatField(default=5.0)),
                ('attacker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attacks_initiated', to='main.player')),
                ('defender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attacks_received', to='main.player')),
                ('winner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='combats_won', to='main.player')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ActivityExecution',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('planning', 'Planning'), ('in_progress', 'In Progress'), ('successful', 'Successful'), ('failed', 'Failed'), ('busted', 'Busted by Police')], default='planning', max_length=20)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('payout', models.IntegerField(default=0)),
                ('heat_gained', models.FloatField(default=0.0)),
                ('reputation_gained', models.IntegerField(default=0)),
                ('participants', models.ManyToManyField(blank=True, related_name='participated_activities', to='main.player')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='criminal_activities', to='main.player')),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.criminalactivity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Family',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, max_length=500)),
                ('treasury', models.BigIntegerField(default=0, help_text='Family shared funds')),
                ('reputation', models.IntegerField(default=0, help_text='Family reputation')),
                ('territory_count', models.IntegerField(default=0, help_text='Number of controlled territories')),
                ('heat_level', models.FloatField(default=0.0, help_text='Combined law enforcement attention')),
                ('is_recruiting', models.BooleanField(default=True)),
                ('max_members', models.IntegerField(default=50)),
                ('boss', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='family_as_boss', to='main.player')),
            ],
            options={
                'verbose_name_plural': 'Families',
            },
        ),
        migrations.CreateModel(
            name='LawEnforcementEvent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('event_type', models.CharField(choices=[('investigation', 'Investigation Started'), ('raid', 'Police Raid'), ('arrest', 'Arrest'), ('surveillance', 'Under Surveillance'), ('witness_protection', 'Witness in Protection')], max_length=20)),
                ('description', models.TextField(max_length=500)),
                ('severity', models.IntegerField(default=1, help_text='Severity level 1-10')),
                ('is_active', models.BooleanField(default=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('target_business', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='law_enforcement_events', to='main.business')),
                ('target_family', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='law_enforcement_events', to='main.family')),
                ('target_player', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='law_enforcement_events', to='main.player')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Territory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('territory_type', models.CharField(choices=[('residential', 'Residential'), ('commercial', 'Commercial'), ('industrial', 'Industrial'), ('downtown', 'Downtown'), ('port', 'Port/Docks')], max_length=20)),
                ('chunk_x', models.IntegerField(help_text='Chunk X coordinate')),
                ('chunk_y', models.IntegerField(help_text='Chunk Y coordinate')),
                ('influence_level', models.FloatField(default=0.0, help_text='Control strength (0-100)')),
                ('contested', models.BooleanField(default=False, help_text='Currently being contested')),
                ('income_per_hour', models.IntegerField(default=100, help_text='Base hourly income')),
                ('population', models.IntegerField(default=1000, help_text='Territory population')),
                ('controlling_family', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='controlled_territories', to='main.family')),
            ],
            options={
                'verbose_name_plural': 'Territories',
                'unique_together': {('chunk_x', 'chunk_y')},
            },
        ),
        migrations.AddField(
            model_name='business',
            name='territory',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.territory'),
        ),
        migrations.CreateModel(
            name='PlayerWeapon',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('quantity', models.IntegerField(default=1)),
                ('condition', models.FloatField(default=100.0, help_text='Weapon condition (0-100)')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='weapons', to='main.player')),
                ('weapon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.weapon')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FamilyMembership',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('role', models.CharField(choices=[('associate', 'Associate'), ('soldier', 'Soldier'), ('capo', 'Capo'), ('underboss', 'Underboss'), ('boss', 'Boss')], default='associate', max_length=20)),
                ('joined_date', models.DateTimeField(auto_now_add=True)),
                ('contributions', models.BigIntegerField(default=0, help_text='Total money contributed')),
                ('respect_earned', models.IntegerField(default=0, help_text='Respect earned for family')),
                ('family', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memberships', to='main.family')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='family_membership', to='main.player')),
            ],
            options={
                'unique_together': {('family', 'player')},
            },
        ),
    ]
